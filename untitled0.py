# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Tk-yQcTvIOxWgEuU9yvC2yUpwsxxrKGz
"""

#  step-1 we have to import dataset to the colab notebook.
import pandas as pd #pd is an instance of pandas
df=pd.read_csv('data csv file.csv')#df is a variable,read_csv is a predefined function from pandas





type(df)

df

#step-2 : grouping the input columns and output columns
x=df.iloc[:,:3]#slicng the output column

x

y=df.iloc[:,-1]

y

x=x.values

x

y=y.values

y

#step-3: handling  missing values or data
# scenario-1: missing value in numerical column
# calculate mean or average of that column
# replace with empty columns
# scenario-2: missing values in non- numerical value
# fill the empty value with highly repeated values
# scenario-3: having missing values in huge data
#sol: remove those empty value rows from datasets
import numpy as np #np is an instance of numpy
from sklearn.impute import SimpleImputer# Is a class from sklearn
imputer=SimpleImputer(missing_values=np.nan,strategy='mean')
imputer.fit(x[:,1:3])
x[:,1:3]=imputer.transform(x[:,1:3])

x

#step-4:Handling the catogorial data
# which converting  the text data into numerical data
from sklearn.preprocessing import   OneHotEncoder#labelencoder is a class which was imported from s1.preprocessing library it is used to convert Catogorial data to binary data ,label encoder is used to binary=0,1
from sklearn.compose import ColumnTransformer#columntransformer is a class imported from sk.compose,is used to apply changes to columns of array
#Alexa-0,0,1
ct=ColumnTransformer(transformers=[('encoder',OneHotEncoder(),[0])],remainder='passthrough')#encoder is a method which converts text to binary or numeric
#np.remainder='passthrough'
x=ct.fit_transform(x)

x

# one hot encoder is apply for only inputs column
from sklearn.preprocessing import LabelEncoder
le=LabelEncoder()
y=le.fit_transform(y)

y

#step-5 : split the data into training and testing data
from sklearn.model_selection import train_test_split#train,test,split be a class which was imported from model_selection,it was used for spliting data into testing and training
x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.2)

x_test



x_train

y_test

y_train

#step-6: feature scaling
from sklearn.preprocessing import StandardScaler
sc=StandardScaler()
x_train[:,3:]=sc.fit_transform(x_train[:,3:])
x_test[:,3:]=sc.transform(x_test[:,3:])

x_train

x_test

# machine learning
#types in machine learning
#1.supervised learning :- when we have labled data,and the model tasks are classification or p
#2.unsupervised learning :- unlabled data,model remembers the patterns,we can perform prediction also.
#3.reinforcement learning :-  trail error method,model learns from failures

# logistic regression algorithm=when model performs classification task we have apply logistic regression alogorithm
# linear regression algorithm= prediction we use it

#step-7 : apply alogorithm  to  the training data for model
from sklearn.linear_model import LogisticRegression
classifier=LogisticRegression()
classifier.fit(x_train,y_train)

y_pred=classifier.predict(x_test)

y_pred